apiVersion: solution.symphony/v1
kind: SolutionContainer
metadata:
  name: site-k8s-target-v-site-app  
  namespace: jessewftesti
spec:
---
apiVersion: solution.symphony/v1
kind: Solution
metadata: 
  name: site-k8s-target-v-site-app-v-v1
  namespace: jessewftesti
spec:
  rootResource: site-k8s-target-v-site-app
  components:
  - name: nginx-ingress  
    properties:
      chart:
        repo: https://github.com/kubernetes/ingress-nginx/releases/download/helm-chart-4.7.1/ingress-nginx-4.7.1.tgz
        name: ingress-nginx
      values:
        controller:
          replicaCount: 1
          nodeSelector:
            kubernetes.io/os: linux
          admissionWebhooks:
            patch:
              nodeSelector:
                kubernetes.io/os: linux 
          service:
            annotations:
              service.beta.kubernetes.io/azure-load-balancer-health-probe-request-path: /healthz      
        defaultBackend:
          nodeSelector:
            kubernetes.io/os: linux  
    type: helm.v3
---
apiVersion: solution.symphony/v1
kind: Solution
metadata: 
  name: site-k8s-target-v-site-app-v-v2
  namespace: jessewftesti
spec:
  rootResource: site-k8s-target-v-site-app
  metadata:
    deployment.replicas: "#1"
    service.ports: "[{\"name\":\"port6379\",\"port\": 6379}]"
    service.type: "ClusterIP"
  components:
  - name: redis-server
    type: container
    properties:
      container.ports: "[{\"containerPort\":6379,\"protocol\":\"TCP\"}]"
      container.imagePullPolicy: "Always"
      container.resources: "{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}"        
      container.image: "docker.io/redis:6.0.5"
    dependencies:
    - deployment-gate
  - name: deployment-gate
    type: http