apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: '{{ .Release.Namespace }}/{{ include "symphony.fullname"
      . }}-serving-cert'
    controller-gen.kubebuilder.io/version: v0.11.1
  name: activations.workflow.symphony
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: '{{ include "symphony.fullname" . }}-webhook-service'
          namespace: '{{ .Release.Namespace }}'
          path: /convert
      conversionReviewVersions:
      - v1
  group: workflow.symphony
  names:
    kind: Activation
    listKind: ActivationList
    plural: activations
    singular: activation
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.nextStage
      name: Next Stage
      type: string
    - jsonPath: .status.status
      name: Status
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: Activation is the Schema for the activations API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              campaign:
                type: string
              generation:
                type: string
              inputs:
                x-kubernetes-preserve-unknown-fields: true
              stage:
                type: string
            type: object
          status:
            properties:
              activationGeneration:
                type: string
              errorMessage:
                type: string
              inputs:
                x-kubernetes-preserve-unknown-fields: true
              isActive:
                type: boolean
              nextStage:
                type: string
              outputs:
                x-kubernetes-preserve-unknown-fields: true
              stage:
                type: string
              status:
                type: integer
              updateTime:
                type: string
            required:
            - stage
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: '{{ .Release.Namespace }}/{{ include "symphony.fullname"
      . }}-serving-cert'
    controller-gen.kubebuilder.io/version: v0.11.1
  name: campaigns.workflow.symphony
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: '{{ include "symphony.fullname" . }}-webhook-service'
          namespace: '{{ .Release.Namespace }}'
          path: /convert
      conversionReviewVersions:
      - v1
  group: workflow.symphony
  names:
    kind: Campaign
    listKind: CampaignList
    plural: campaigns
    singular: campaign
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: Campaign is the Schema for the campaigns API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              firstStage:
                type: string
              name:
                type: string
              selfDriving:
                type: boolean
              stages:
                additionalProperties:
                  properties:
                    config:
                      x-kubernetes-preserve-unknown-fields: true
                    contexts:
                      type: string
                    inputs:
                      x-kubernetes-preserve-unknown-fields: true
                    name:
                      type: string
                    provider:
                      type: string
                    proxy:
                      properties:
                        config:
                          properties:
                            baseUrl:
                              type: string
                            password:
                              type: string
                            user:
                              type: string
                          type: object
                        provider:
                          type: string
                      type: object
                    schedule:
                      properties:
                        date:
                          type: string
                        time:
                          type: string
                        zone:
                          type: string
                      required:
                      - date
                      - time
                      - zone
                      type: object
                    stageSelector:
                      type: string
                    triggeringStage:
                      type: string
                  type: object
                type: object
            type: object
        type: object
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: '{{ .Release.Namespace }}/{{ include "symphony.fullname"
      . }}-serving-cert'
    controller-gen.kubebuilder.io/version: v0.11.1
  name: catalogs.federation.symphony
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: '{{ include "symphony.fullname" . }}-webhook-service'
          namespace: '{{ .Release.Namespace }}'
          path: /convert
      conversionReviewVersions:
      - v1
  group: federation.symphony
  names:
    kind: Catalog
    listKind: CatalogList
    plural: catalogs
    singular: catalog
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: Catalog is the Schema for the catalogs API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              generation:
                type: string
              metadata:
                additionalProperties:
                  type: string
                type: object
              objectRef:
                properties:
                  address:
                    type: string
                  generation:
                    type: string
                  group:
                    type: string
                  kind:
                    type: string
                  metadata:
                    additionalProperties:
                      type: string
                    type: object
                  name:
                    type: string
                  namespace:
                    type: string
                  siteId:
                    type: string
                  version:
                    type: string
                required:
                - group
                - kind
                - name
                - namespace
                - siteId
                - version
                type: object
              parentName:
                type: string
              properties:
                type: object
                x-kubernetes-preserve-unknown-fields: true
              type:
                type: string
            required:
            - properties
            - type
            type: object
          status:
            properties:
              properties:
                additionalProperties:
                  type: string
                type: object
            required:
            - properties
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: '{{ .Release.Namespace }}/{{ include "symphony.fullname"
      . }}-serving-cert'
    controller-gen.kubebuilder.io/version: v0.11.1
  name: devices.fabric.symphony
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: '{{ include "symphony.fullname" . }}-webhook-service'
          namespace: '{{ .Release.Namespace }}'
          path: /convert
      conversionReviewVersions:
      - v1
  group: fabric.symphony
  names:
    kind: Device
    listKind: DeviceList
    plural: devices
    singular: device
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: Device is the Schema for the devices API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: DeviceSpec defines the spec properties of the DeviceState
            properties:
              bindings:
                items:
                  properties:
                    config:
                      additionalProperties:
                        type: string
                      type: object
                    provider:
                      type: string
                    role:
                      type: string
                  required:
                  - provider
                  - role
                  type: object
                type: array
              displayName:
                type: string
              properties:
                additionalProperties:
                  type: string
                type: object
            type: object
          status:
            description: DeviceStatus defines the observed state of Device
            properties:
              properties:
                additionalProperties:
                  type: string
                description: Device properties
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: '{{ .Release.Namespace }}/{{ include "symphony.fullname"
      . }}-serving-cert'
    controller-gen.kubebuilder.io/version: v0.11.1
  name: instances.solution.symphony
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: '{{ include "symphony.fullname" . }}-webhook-service'
          namespace: '{{ .Release.Namespace }}'
          path: /convert
      conversionReviewVersions:
      - v1
  group: solution.symphony
  names:
    kind: Instance
    listKind: InstanceList
    plural: instances
    singular: instance
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.properties.status
      name: Status
      type: string
    - jsonPath: .status.properties.targets
      name: Targets
      type: string
    - jsonPath: .status.properties.deployed
      name: Deployed
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: Instance is the Schema for the instances API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              arguments:
                additionalProperties:
                  additionalProperties:
                    type: string
                  type: object
                type: object
              displayName:
                type: string
              generation:
                type: string
              metadata:
                additionalProperties:
                  type: string
                type: object
              parameters:
                additionalProperties:
                  type: string
                type: object
              pipelines:
                items:
                  description: PipelineSpec defines the desired pipeline of the instance
                  properties:
                    name:
                      type: string
                    parameters:
                      additionalProperties:
                        type: string
                      type: object
                    skill:
                      type: string
                  required:
                  - name
                  - skill
                  type: object
                type: array
              reconciliationPolicy:
                description: Optional ReconcilicationPolicy to specify how target
                  controller should reconcile. Now only periodic reconciliation is
                  supported. If the interval is 0, it will only reconcile when the
                  instance is created or updated.
                properties:
                  interval:
                    type: string
                  state:
                    type: string
                required:
                - state
                type: object
              scope:
                type: string
              solution:
                type: string
              target:
                description: TargertRefSpec defines the target the instance will deploy
                  to
                properties:
                  name:
                    type: string
                  selector:
                    additionalProperties:
                      type: string
                    type: object
                type: object
              topologies:
                items:
                  description: TopologySpec defines the desired device topology the
                    instance
                  properties:
                    bindings:
                      items:
                        properties:
                          config:
                            additionalProperties:
                              type: string
                            type: object
                          provider:
                            type: string
                          role:
                            type: string
                        required:
                        - provider
                        - role
                        type: object
                      type: array
                    device:
                      type: string
                    selector:
                      additionalProperties:
                        type: string
                      type: object
                  type: object
                type: array
            required:
            - solution
            type: object
          status:
            properties:
              lastModified:
                format: date-time
                type: string
              properties:
                additionalProperties:
                  type: string
                type: object
              provisioningStatus:
                description: Defines the state of the ARM resource for long running
                  operations
                properties:
                  error:
                    description: Defines an error in the ARM resource for long running
                      operations
                    properties:
                      code:
                        type: string
                      details:
                        items:
                          description: Defines an error for symphony target
                          properties:
                            code:
                              type: string
                            details:
                              items:
                                description: Defines an error for components defined
                                  in symphony
                                properties:
                                  code:
                                    type: string
                                  message:
                                    type: string
                                  target:
                                    type: string
                                type: object
                              type: array
                            message:
                              type: string
                            target:
                              type: string
                          type: object
                        type: array
                      message:
                        type: string
                      target:
                        type: string
                    type: object
                  failureCause:
                    type: string
                  logErrors:
                    type: boolean
                  operationId:
                    type: string
                  output:
                    additionalProperties:
                      type: string
                    type: object
                  status:
                    type: string
                required:
                - operationId
                - status
                type: object
            required:
            - provisioningStatus
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: '{{ .Release.Namespace }}/{{ include "symphony.fullname"
      . }}-serving-cert'
    controller-gen.kubebuilder.io/version: v0.11.1
  name: models.ai.symphony
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: '{{ include "symphony.fullname" . }}-webhook-service'
          namespace: '{{ .Release.Namespace }}'
          path: /convert
      conversionReviewVersions:
      - v1
  group: ai.symphony
  names:
    kind: Model
    listKind: ModelList
    plural: models
    singular: model
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: Model is the Schema for the models API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              bindings:
                items:
                  properties:
                    config:
                      additionalProperties:
                        type: string
                      type: object
                    provider:
                      type: string
                    role:
                      type: string
                  required:
                  - provider
                  - role
                  type: object
                type: array
              constraints:
                type: string
              displayName:
                type: string
              properties:
                additionalProperties:
                  type: string
                type: object
            type: object
          status:
            description: ModelStatus defines the observed state of Model
            properties:
              properties:
                additionalProperties:
                  type: string
                description: 'Important: Run "make" to regenerate code after modifying
                  this file'
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: '{{ .Release.Namespace }}/{{ include "symphony.fullname"
      . }}-serving-cert'
    controller-gen.kubebuilder.io/version: v0.11.1
  name: sites.federation.symphony
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: '{{ include "symphony.fullname" . }}-webhook-service'
          namespace: '{{ .Release.Namespace }}'
          path: /convert
      conversionReviewVersions:
      - v1
  group: federation.symphony
  names:
    kind: Site
    listKind: SiteList
    plural: sites
    singular: site
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: Site is the Schema for the sites API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              isSelf:
                type: boolean
              name:
                type: string
              properties:
                additionalProperties:
                  type: string
                type: object
              secretHash:
                type: string
            type: object
          status:
            properties:
              instanceStatuses:
                additionalProperties:
                  properties:
                    reason:
                      type: string
                    state:
                      type: integer
                  type: object
                type: object
              isOnline:
                type: boolean
              lastReported:
                type: string
              targetStatuses:
                additionalProperties:
                  properties:
                    reason:
                      type: string
                    state:
                      type: integer
                  type: object
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: '{{ .Release.Namespace }}/{{ include "symphony.fullname"
      . }}-serving-cert'
    controller-gen.kubebuilder.io/version: v0.11.1
  name: skillpackages.ai.symphony
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: '{{ include "symphony.fullname" . }}-webhook-service'
          namespace: '{{ .Release.Namespace }}'
          path: /convert
      conversionReviewVersions:
      - v1
  group: ai.symphony
  names:
    kind: SkillPackage
    listKind: SkillPackageList
    plural: skillpackages
    singular: skillpackage
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: SkillPackage is the Schema for the skillpackages API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              constraints:
                type: string
              displayName:
                type: string
              properties:
                additionalProperties:
                  type: string
                type: object
              routes:
                items:
                  properties:
                    filters:
                      items:
                        properties:
                          direction:
                            type: string
                          parameters:
                            additionalProperties:
                              type: string
                            type: object
                          type:
                            type: string
                        required:
                        - direction
                        - type
                        type: object
                      type: array
                    properties:
                      additionalProperties:
                        type: string
                      type: object
                    route:
                      type: string
                    type:
                      type: string
                  required:
                  - route
                  - type
                  type: object
                type: array
              skill:
                type: string
            required:
            - skill
            type: object
          status:
            description: SkillPackageStatus defines the observed state of SkillPackage
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: '{{ .Release.Namespace }}/{{ include "symphony.fullname"
      . }}-serving-cert'
    controller-gen.kubebuilder.io/version: v0.11.1
  name: skills.ai.symphony
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: '{{ include "symphony.fullname" . }}-webhook-service'
          namespace: '{{ .Release.Namespace }}'
          path: /convert
      conversionReviewVersions:
      - v1
  group: ai.symphony
  names:
    kind: Skill
    listKind: SkillList
    plural: skills
    singular: skill
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: Skill is the Schema for the skills API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              bindings:
                items:
                  properties:
                    config:
                      additionalProperties:
                        type: string
                      type: object
                    provider:
                      type: string
                    role:
                      type: string
                  required:
                  - provider
                  - role
                  type: object
                type: array
              displayName:
                type: string
              edges:
                items:
                  properties:
                    source:
                      properties:
                        node:
                          type: string
                        route:
                          type: string
                      required:
                      - node
                      - route
                      type: object
                    target:
                      properties:
                        node:
                          type: string
                        route:
                          type: string
                      required:
                      - node
                      - route
                      type: object
                  required:
                  - source
                  - target
                  type: object
                type: array
              nodes:
                items:
                  properties:
                    configurations:
                      additionalProperties:
                        type: string
                      type: object
                    id:
                      type: string
                    inputs:
                      items:
                        properties:
                          filters:
                            items:
                              properties:
                                direction:
                                  type: string
                                parameters:
                                  additionalProperties:
                                    type: string
                                  type: object
                                type:
                                  type: string
                              required:
                              - direction
                              - type
                              type: object
                            type: array
                          properties:
                            additionalProperties:
                              type: string
                            type: object
                          route:
                            type: string
                          type:
                            type: string
                        required:
                        - route
                        - type
                        type: object
                      type: array
                    model:
                      type: string
                    name:
                      type: string
                    outputs:
                      items:
                        properties:
                          filters:
                            items:
                              properties:
                                direction:
                                  type: string
                                parameters:
                                  additionalProperties:
                                    type: string
                                  type: object
                                type:
                                  type: string
                              required:
                              - direction
                              - type
                              type: object
                            type: array
                          properties:
                            additionalProperties:
                              type: string
                            type: object
                          route:
                            type: string
                          type:
                            type: string
                        required:
                        - route
                        - type
                        type: object
                      type: array
                    type:
                      type: string
                  required:
                  - id
                  - name
                  - type
                  type: object
                type: array
              parameters:
                additionalProperties:
                  type: string
                type: object
              properties:
                additionalProperties:
                  type: string
                type: object
            required:
            - edges
            - nodes
            type: object
          status:
            description: SkillStatus defines the observed state of Skill
            properties:
              properties:
                additionalProperties:
                  type: string
                description: INSERT ADDITIONAL STATUS FIELD - define observed state
                  of cluster
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: '{{ .Release.Namespace }}/{{ include "symphony.fullname"
      . }}-serving-cert'
    controller-gen.kubebuilder.io/version: v0.11.1
  name: solutions.solution.symphony
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: '{{ include "symphony.fullname" . }}-webhook-service'
          namespace: '{{ .Release.Namespace }}'
          path: /convert
      conversionReviewVersions:
      - v1
  group: solution.symphony
  names:
    kind: Solution
    listKind: SolutionList
    plural: solutions
    singular: solution
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: Solution is the Schema for the solutions API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              components:
                items:
                  description: Defines a desired runtime component
                  properties:
                    constraints:
                      type: string
                    dependencies:
                      items:
                        type: string
                      type: array
                    metadata:
                      additionalProperties:
                        type: string
                      type: object
                    name:
                      type: string
                    properties:
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    routes:
                      items:
                        properties:
                          filters:
                            items:
                              properties:
                                direction:
                                  type: string
                                parameters:
                                  additionalProperties:
                                    type: string
                                  type: object
                                type:
                                  type: string
                              required:
                              - direction
                              - type
                              type: object
                            type: array
                          properties:
                            additionalProperties:
                              type: string
                            type: object
                          route:
                            type: string
                          type:
                            type: string
                        required:
                        - route
                        - type
                        type: object
                      type: array
                    sidecars:
                      items:
                        properties:
                          name:
                            type: string
                          properties:
                            type: object
                            x-kubernetes-preserve-unknown-fields: true
                          type:
                            type: string
                        type: object
                      type: array
                    skills:
                      items:
                        type: string
                      type: array
                    type:
                      type: string
                  required:
                  - name
                  - type
                  type: object
                type: array
              displayName:
                type: string
              metadata:
                additionalProperties:
                  type: string
                type: object
              version:
                description: Defines the version of a particular resource
                type: string
            type: object
          status:
            description: SolutionStatus defines the observed state of Solution
            properties:
              properties:
                additionalProperties:
                  type: string
                description: 'Important: Run "make" to regenerate code after modifying
                  this file'
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: '{{ .Release.Namespace }}/{{ include "symphony.fullname"
      . }}-serving-cert'
    controller-gen.kubebuilder.io/version: v0.11.1
  name: targets.fabric.symphony
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: '{{ include "symphony.fullname" . }}-webhook-service'
          namespace: '{{ .Release.Namespace }}'
          path: /convert
      conversionReviewVersions:
      - v1
  group: fabric.symphony
  names:
    kind: Target
    listKind: TargetList
    plural: targets
    singular: target
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.properties.status
      name: Status
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: Target is the Schema for the targets API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Defines the desired state of Target
            properties:
              components:
                items:
                  description: Defines a desired runtime component
                  properties:
                    constraints:
                      type: string
                    dependencies:
                      items:
                        type: string
                      type: array
                    metadata:
                      additionalProperties:
                        type: string
                      type: object
                    name:
                      type: string
                    properties:
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    routes:
                      items:
                        properties:
                          filters:
                            items:
                              properties:
                                direction:
                                  type: string
                                parameters:
                                  additionalProperties:
                                    type: string
                                  type: object
                                type:
                                  type: string
                              required:
                              - direction
                              - type
                              type: object
                            type: array
                          properties:
                            additionalProperties:
                              type: string
                            type: object
                          route:
                            type: string
                          type:
                            type: string
                        required:
                        - route
                        - type
                        type: object
                      type: array
                    sidecars:
                      items:
                        properties:
                          name:
                            type: string
                          properties:
                            type: object
                            x-kubernetes-preserve-unknown-fields: true
                          type:
                            type: string
                        type: object
                      type: array
                    skills:
                      items:
                        type: string
                      type: array
                    type:
                      type: string
                  required:
                  - name
                  - type
                  type: object
                type: array
              constraints:
                type: string
              displayName:
                type: string
              forceRedeploy:
                type: boolean
              generation:
                type: string
              metadata:
                additionalProperties:
                  type: string
                type: object
              properties:
                additionalProperties:
                  type: string
                type: object
              reconciliationPolicy:
                description: Optional ReconcilicationPolicy to specify how target
                  controller should reconcile. Now only periodic reconciliation is
                  supported. If the interval is 0, it will only reconcile when the
                  instance is created or updated.
                properties:
                  interval:
                    type: string
                  state:
                    type: string
                required:
                - state
                type: object
              scope:
                type: string
              topologies:
                items:
                  description: TopologySpec defines the desired device topology the
                    instance
                  properties:
                    bindings:
                      items:
                        properties:
                          config:
                            additionalProperties:
                              type: string
                            type: object
                          provider:
                            type: string
                          role:
                            type: string
                        required:
                        - provider
                        - role
                        type: object
                      type: array
                    device:
                      type: string
                    selector:
                      additionalProperties:
                        type: string
                      type: object
                  type: object
                type: array
            type: object
          status:
            properties:
              lastModified:
                format: date-time
                type: string
              properties:
                additionalProperties:
                  type: string
                type: object
              provisioningStatus:
                description: Defines the state of the ARM resource for long running
                  operations
                properties:
                  error:
                    description: Defines an error in the ARM resource for long running
                      operations
                    properties:
                      code:
                        type: string
                      details:
                        items:
                          description: Defines an error for symphony target
                          properties:
                            code:
                              type: string
                            details:
                              items:
                                description: Defines an error for components defined
                                  in symphony
                                properties:
                                  code:
                                    type: string
                                  message:
                                    type: string
                                  target:
                                    type: string
                                type: object
                              type: array
                            message:
                              type: string
                            target:
                              type: string
                          type: object
                        type: array
                      message:
                        type: string
                      target:
                        type: string
                    type: object
                  failureCause:
                    type: string
                  logErrors:
                    type: boolean
                  operationId:
                    type: string
                  output:
                    additionalProperties:
                      type: string
                    type: object
                  status:
                    type: string
                required:
                - operationId
                - status
                type: object
            required:
            - provisioningStatus
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: '{{ include "symphony.fullname" . }}-controller-manager'
  namespace: '{{ .Release.Namespace }}'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: '{{ include "symphony.fullname" . }}-leader-election-role'
  namespace: '{{ .Release.Namespace }}'
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: '{{ include "symphony.fullname" . }}-manager-role'
rules:
- apiGroups:
  - ai.symphony
  resources:
  - models
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ai.symphony
  resources:
  - models/finalizers
  verbs:
  - update
- apiGroups:
  - ai.symphony
  resources:
  - models/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - ai.symphony
  resources:
  - skillpackages
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ai.symphony
  resources:
  - skillpackages/finalizers
  verbs:
  - update
- apiGroups:
  - ai.symphony
  resources:
  - skillpackages/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - ai.symphony
  resources:
  - skills
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ai.symphony
  resources:
  - skills/finalizers
  verbs:
  - update
- apiGroups:
  - ai.symphony
  resources:
  - skills/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - fabric.symphony
  resources:
  - devices
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - fabric.symphony
  resources:
  - devices/finalizers
  verbs:
  - update
- apiGroups:
  - fabric.symphony
  resources:
  - devices/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - fabric.symphony
  resources:
  - targets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - fabric.symphony
  resources:
  - targets/finalizers
  verbs:
  - update
- apiGroups:
  - fabric.symphony
  resources:
  - targets/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - workflow.symphony
  resources:
  - campaigns
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - workflow.symphony
  resources:
  - campaigns/finalizers
  verbs:
  - update
- apiGroups:
  - workflow.symphony
  resources:
  - campaigns/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - workflow.symphony
  resources:
  - activations
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - workflow.symphony
  resources:
  - activations/finalizers
  verbs:
  - update
- apiGroups:
  - workflow.symphony
  resources:
  - activations/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - solution.symphony
  resources:
  - instances
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - solution.symphony
  resources:
  - instances/finalizers
  verbs:
  - update
- apiGroups:
  - solution.symphony
  resources:
  - instances/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - solution.symphony
  resources:
  - solutions
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - solution.symphony
  resources:
  - solutions/finalizers
  verbs:
  - update
- apiGroups:
  - solution.symphony
  resources:
  - solutions/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - solution.symphony
  resources:
  - instances
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - solution.symphony
  resources:
  - instances/finalizers
  verbs:
  - update
- apiGroups:
  - solution.symphony
  resources:
  - instances/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - solution.symphony
  resources:
  - solutions
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - solution.symphony
  resources:
  - solutions/finalizers
  verbs:
  - update
- apiGroups:
  - solution.symphony
  resources:
  - solutions/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - fabric.symphony
  resources:
  - targets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - fabric.symphony
  resources:
  - targets/finalizers
  verbs:
  - update
- apiGroups:
  - fabric.symphony
  resources:
  - targets/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - federation.symphony
  resources:
  - sites
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - federation.symphony
  resources:
  - sites/finalizers
  verbs:
  - update
- apiGroups:
  - federation.symphony
  resources:
  - sites/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - federation.symphony
  resources:
  - catalogs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - federation.symphony
  resources:
  - catalogs/finalizers
  verbs:
  - update
- apiGroups:
  - federation.symphony
  resources:
  - catalogs/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: '{{ include "symphony.fullname" . }}-metrics-reader'
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: '{{ include "symphony.fullname" . }}-proxy-role'
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: '{{ include "symphony.fullname" . }}-leader-election-rolebinding'
  namespace: '{{ .Release.Namespace }}'
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: '{{ include "symphony.fullname" . }}-leader-election-role'
subjects:
- kind: ServiceAccount
  name: '{{ include "symphony.fullname" . }}-controller-manager'
  namespace: '{{ .Release.Namespace }}'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: '{{ include "symphony.fullname" . }}-manager-rolebinding'
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: '{{ include "symphony.fullname" . }}-manager-role'
subjects:
- kind: ServiceAccount
  name: '{{ include "symphony.fullname" . }}-controller-manager'
  namespace: '{{ .Release.Namespace }}'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: '{{ include "symphony.fullname" . }}-proxy-rolebinding'
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: '{{ include "symphony.fullname" . }}-proxy-role'
subjects:
- kind: ServiceAccount
  name: '{{ include "symphony.fullname" . }}-controller-manager'
  namespace: '{{ .Release.Namespace }}'
---
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    ##
    ## Copyright (c) Microsoft Corporation.
    ## Licensed under the MIT license.
    ## SPDX-License-Identifier: MIT
    ##
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    kind: ControllerManagerConfig
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
    leaderElection:
      leaderElect: true
      resourceName: 33405cb8.symphony
    syncIntervalSeconds: 180
    validationPolicies:
      model:
      - selectorType: properties
        specField: model.project
        type: unique
        message: "there's already a model associated with the Custom Vision project: %s"
      target:
      - selectorType: topologies.bindings
        selectorKey: provider
        selectorValue: providers.target.azure.iotedge
        specField: binding.config.deviceName
        type: unique
        message: "there's already a target associated with the IoT Edge device: %s"
kind: ConfigMap
metadata:
  name: '{{ include "symphony.fullname" . }}-manager-config'
  namespace: '{{ .Release.Namespace }}'
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: '{{ include "symphony.name" . }}-controller-manager'
  name: '{{ include "symphony.fullname" . }}-controller-manager-metrics-service'
  namespace: '{{ .Release.Namespace }}'
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    control-plane: '{{ include "symphony.name" . }}-controller-manager'
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: '{{ include "symphony.name" . }}-controller-manager'
  name: '{{ include "symphony.fullname" . }}-webhook-service'
  namespace: '{{ .Release.Namespace }}'
spec:
  ports:
  - port: 443
    protocol: TCP
    targetPort: 9443
  selector:
    control-plane: '{{ include "symphony.name" . }}-controller-manager'
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: '{{ include "symphony.name" . }}-controller-manager'
  name: '{{ include "symphony.fullname" . }}-controller-manager'
  namespace: '{{ .Release.Namespace }}'
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: '{{ include "symphony.name" . }}-controller-manager'
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: '{{ include "symphony.name" . }}-controller-manager'
    spec:
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        command:
        - /manager
        env:
        - name: APP_VERSION
          value: '{{ .Chart.AppVersion }}'
        - name: CONFIG_NAME
          value: '{{ include "symphony.fullname" . }}-manager-config'
        - name: SERVICE_ACCOUNT_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: USE_SERVICE_ACCOUNT_TOKENS
          value: "true"
        envFrom:
        - configMapRef:
            name: '{{ include "symphony.envConfigName" . }}'
        image: '{{ .Values.symphonyImage.repository }}:{{ .Values.symphonyImage.tag
          }}'
        imagePullPolicy: '{{ .Values.symphonyImage.pullPolicy }}'
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/secrets/tokens
          name: symphony-api-token
        - mountPath: '{{ include "symphony.apiServingCertsDir" . }}'
          name: api-ca-cert
          readOnly: true
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=0
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.8.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 5m
            memory: 64Mi
      securityContext:
        runAsNonRoot: true
      serviceAccountName: '{{ include "symphony.fullname" . }}-controller-manager'
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: '{{ include "symphony.fullname" . }}-webhook-server-cert'
      - name: symphony-api-token
        projected:
          sources:
          - serviceAccountToken:
              audience: '{{ include "symphony.url" . }}'
              expirationSeconds: 600
              path: symphony-api-token
      - name: api-ca-cert
        secret:
          defaultMode: 420
          items:
          - key: ca.crt
            path: ca.crt
          secretName: '{{ include "symphony.apiServingCertName" . }}'
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: '{{ include "symphony.fullname" . }}-serving-cert'
  namespace: '{{ .Release.Namespace }}'
spec:
  dnsNames:
  - '{{ include "symphony.fullname" . }}-webhook-service.{{ .Release.Namespace }}.svc'
  - '{{ include "symphony.fullname" . }}-webhook-service.{{ .Release.Namespace }}.svc.cluster.local'
  issuerRef:
    kind: Issuer
    name: '{{ include "symphony.fullname" . }}-selfsigned-issuer'
  secretName: '{{ include "symphony.fullname" . }}-webhook-server-cert'
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: '{{ include "symphony.fullname" . }}-selfsigned-issuer'
  namespace: '{{ .Release.Namespace }}'
spec:
  selfSigned: {}
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: '{{ .Release.Namespace }}/{{ include "symphony.fullname"
      . }}-serving-cert'
  name: '{{ include "symphony.fullname" . }}-mutating-webhook-configuration'
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: '{{ include "symphony.fullname" . }}-webhook-service'
      namespace: '{{ .Release.Namespace }}'
      path: /mutate-fabric-symphony-v1-target
  failurePolicy: Fail
  name: mtarget.kb.io
  rules:
  - apiGroups:
    - fabric.symphony
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - targets
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: '{{ include "symphony.fullname" . }}-webhook-service'
      namespace: '{{ .Release.Namespace }}'
      path: /mutate-solution-symphony-v1-instance
  failurePolicy: Fail
  name: minstance.kb.io
  rules:
  - apiGroups:
    - solution.symphony
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - instances
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: '{{ include "symphony.fullname" . }}-webhook-service'
      namespace: '{{ .Release.Namespace }}'
      path: /mutate-solution-symphony-v1-solution
  failurePolicy: Fail
  name: msolution.kb.io
  rules:
  - apiGroups:
    - solution.symphony
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - solutions
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: '{{ include "symphony.fullname" . }}-webhook-service'
      namespace: '{{ .Release.Namespace }}'
      path: /mutate-federation-symphony-v1-catalog
  failurePolicy: Fail
  name: mcatalog.kb.io
  rules:
  - apiGroups:
    - federation.symphony
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - catalogs
  sideEffects: None
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: '{{ .Release.Namespace }}/{{ include "symphony.fullname"
      . }}-serving-cert'
  name: '{{ include "symphony.fullname" . }}-validating-webhook-configuration'
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: '{{ include "symphony.fullname" . }}-webhook-service'
      namespace: '{{ .Release.Namespace }}'
      path: /validate-fabric-symphony-v1-target
  failurePolicy: Fail
  name: vtarget.kb.io
  rules:
  - apiGroups:
    - fabric.symphony
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - targets
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: '{{ include "symphony.fullname" . }}-webhook-service'
      namespace: '{{ .Release.Namespace }}'
      path: /validate-solution-symphony-v1-instance
  failurePolicy: Fail
  name: vinstance.kb.io
  rules:
  - apiGroups:
    - solution.symphony
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - instances
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: '{{ include "symphony.fullname" . }}-webhook-service'
      namespace: '{{ .Release.Namespace }}'
      path: /validate-solution-symphony-v1-solution
  failurePolicy: Fail
  name: vsolution.kb.io
  rules:
  - apiGroups:
    - solution.symphony
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - solutions
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: '{{ include "symphony.fullname" . }}-webhook-service'
      namespace: '{{ .Release.Namespace }}'
      path: /validate-federation-symphony-v1-catalog
  failurePolicy: Fail
  name: vcatalog.kb.io
  rules:
  - apiGroups:
    - federation.symphony
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - catalogs
  sideEffects: None
