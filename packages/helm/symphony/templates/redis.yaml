{{- if and .Values.redis.enabled .Values.redis.persistentVolume.enabled}}
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-pvc
  namespace: {{ .Release.Namespace }}
spec:
  storageClassName: {{ .Values.redis.persistentVolume.storageclass }}
  accessModes:
  - {{ .Values.redis.persistentVolume.accessMode }}
  resources:
    requests:
      storage: {{ .Values.redis.persistentVolume.size }}
{{- end }}
---
{{- if and .Values.redis.enabled (not .Values.redis.asSidecar)}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "symphony.fullname" . }}-redis
  labels:
    app: {{ include "symphony.name" . }}-redis
spec:
  selector:
    matchLabels:
      app: {{ include "symphony.name" . }}-redis
  replicas: 1
  template:
    metadata:
      labels:
        app: {{ include "symphony.name" . }}-redis
    spec:
      containers:
      - name: redis
        image: {{ .Values.redis.image }}
        ports:
          - containerPort: {{ .Values.redis.port }}
        command: ["redis-server", "/usr/var/redis/redis.conf"]
        volumeMounts:
        - name: redis-config
          mountPath: /usr/var/redis
        {{- if .Values.redis.persistentVolume.enabled }}
        - name: redis-data
          mountPath: /data
        {{- end }}
      volumes:
      - name: redis-config
        configMap:
          name: redis-config-map
          items:
          - key: redis.conf
            path: redis.conf
      {{- if .Values.redis.persistentVolume.enabled }}
      - name: redis-data
        persistentVolumeClaim:
          claimName: redis-pvc
      {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "symphony.fullname" . }}-redis
  labels:
    app: {{ include "symphony.name" . }}-redis
spec:
  selector:
    app: {{ include "symphony.name" . }}-redis
  ports:
    - name: redis
      port: {{ .Values.redis.port }}
      targetPort: {{ .Values.redis.port }}
{{- end }}