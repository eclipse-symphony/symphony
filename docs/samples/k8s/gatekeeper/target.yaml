apiVersion: fabric.symphony/v1
kind: Target
metadata:
  name: test-k8s-target
spec:  
  metadata:
    deployment.replicas: "#1"
    service.ports: "[{\"name\":\"port8088\",\"port\": 8088}]"
    service.type: "ClusterIP"
    service.name: "symphony-agent"
  components:
  - name: "symphony-agent"
    properties:
      container.version: "1.0"
      container.type: "docker"
      container.image: "ghcr.io/azure/symphony/symphony-agent:0.39.9"
      container.createOptions: ""      
      container.restartPolicy: "always"     
      env.AZURE_CLIENT_ID: "<Azure SP Client Id>"
      env.AZURE_TENANT_ID: "<Azure SP tenant Id>"
      env.AZURE_CLIENT_SECRET: "<Azure SP secret>"
      env.STORAGE_ACCOUNT: "voestore"
      env.STORAGE_CONTAINER: "snapshots"
      env.SYMPHONY_URL: "http://20.150.157.155:8080/v1alpha2/agent/references"
      env.TARGET_NAME: "k8s-target"
    dependencies:
    - gatekeeper
    - policies
  - name: "gatekeeper"
    type: yaml.k8s
    properties:
      yaml.url: "https://raw.githubusercontent.com/open-policy-agent/gatekeeper/master/deploy/gatekeeper.yaml"    
      errors.ignore: "true"
  - name: "policies"
    type: yaml.k8s
    properties:
      yaml.url: "https://demopolicies.blob.core.windows.net/gatekeeper/policy.yaml"        
    dependencies:
    - gatekeeper
  topologies:
  - bindings:
    - role: instance
      provider: providers.target.k8s
      config:
        inCluster: "true" 
    - role: yaml.k8s
      provider: providers.target.kubectl
      config:
        inCluster: "true"