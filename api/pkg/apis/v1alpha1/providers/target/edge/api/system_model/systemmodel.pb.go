// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: system_model/systemmodel.proto

package system_model

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AppInstanceStatusEnum int32

const (
	AppInstanceStatusEnum_Unknown   AppInstanceStatusEnum = 0
	AppInstanceStatusEnum_Single    AppInstanceStatusEnum = 1
	AppInstanceStatusEnum_Primary   AppInstanceStatusEnum = 2
	AppInstanceStatusEnum_Secondary AppInstanceStatusEnum = 3
	AppInstanceStatusEnum_Paired    AppInstanceStatusEnum = 4
	AppInstanceStatusEnum_Unpaired  AppInstanceStatusEnum = 5
)

// Enum value maps for AppInstanceStatusEnum.
var (
	AppInstanceStatusEnum_name = map[int32]string{
		0: "Unknown",
		1: "Single",
		2: "Primary",
		3: "Secondary",
		4: "Paired",
		5: "Unpaired",
	}
	AppInstanceStatusEnum_value = map[string]int32{
		"Unknown":   0,
		"Single":    1,
		"Primary":   2,
		"Secondary": 3,
		"Paired":    4,
		"Unpaired":  5,
	}
)

func (x AppInstanceStatusEnum) Enum() *AppInstanceStatusEnum {
	p := new(AppInstanceStatusEnum)
	*p = x
	return p
}

func (x AppInstanceStatusEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AppInstanceStatusEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_system_model_systemmodel_proto_enumTypes[0].Descriptor()
}

func (AppInstanceStatusEnum) Type() protoreflect.EnumType {
	return &file_system_model_systemmodel_proto_enumTypes[0]
}

func (x AppInstanceStatusEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AppInstanceStatusEnum.Descriptor instead.
func (AppInstanceStatusEnum) EnumDescriptor() ([]byte, []int) {
	return file_system_model_systemmodel_proto_rawDescGZIP(), []int{0}
}

type DeviceStatusEnum int32

const (
	DeviceStatusEnum_Unreachable DeviceStatusEnum = 0
	DeviceStatusEnum_Reachable   DeviceStatusEnum = 1
)

// Enum value maps for DeviceStatusEnum.
var (
	DeviceStatusEnum_name = map[int32]string{
		0: "Unreachable",
		1: "Reachable",
	}
	DeviceStatusEnum_value = map[string]int32{
		"Unreachable": 0,
		"Reachable":   1,
	}
)

func (x DeviceStatusEnum) Enum() *DeviceStatusEnum {
	p := new(DeviceStatusEnum)
	*p = x
	return p
}

func (x DeviceStatusEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DeviceStatusEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_system_model_systemmodel_proto_enumTypes[1].Descriptor()
}

func (DeviceStatusEnum) Type() protoreflect.EnumType {
	return &file_system_model_systemmodel_proto_enumTypes[1]
}

func (x DeviceStatusEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DeviceStatusEnum.Descriptor instead.
func (DeviceStatusEnum) EnumDescriptor() ([]byte, []int) {
	return file_system_model_systemmodel_proto_rawDescGZIP(), []int{1}
}

type DesiredStateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DesiredStateRequest) Reset() {
	*x = DesiredStateRequest{}
	mi := &file_system_model_systemmodel_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DesiredStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DesiredStateRequest) ProtoMessage() {}

func (x *DesiredStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_system_model_systemmodel_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DesiredStateRequest.ProtoReflect.Descriptor instead.
func (*DesiredStateRequest) Descriptor() ([]byte, []int) {
	return file_system_model_systemmodel_proto_rawDescGZIP(), []int{0}
}

type ListDeviceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDeviceRequest) Reset() {
	*x = ListDeviceRequest{}
	mi := &file_system_model_systemmodel_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDeviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDeviceRequest) ProtoMessage() {}

func (x *ListDeviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_system_model_systemmodel_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDeviceRequest.ProtoReflect.Descriptor instead.
func (*ListDeviceRequest) Descriptor() ([]byte, []int) {
	return file_system_model_systemmodel_proto_rawDescGZIP(), []int{1}
}

type ListAppRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAppRequest) Reset() {
	*x = ListAppRequest{}
	mi := &file_system_model_systemmodel_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAppRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAppRequest) ProtoMessage() {}

func (x *ListAppRequest) ProtoReflect() protoreflect.Message {
	mi := &file_system_model_systemmodel_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAppRequest.ProtoReflect.Descriptor instead.
func (*ListAppRequest) Descriptor() ([]byte, []int) {
	return file_system_model_systemmodel_proto_rawDescGZIP(), []int{2}
}

type DesiredStateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Apps          []*AppInstance         `protobuf:"bytes,1,rep,name=apps,proto3" json:"apps,omitempty"`
	Devices       []*Device              `protobuf:"bytes,2,rep,name=devices,proto3" json:"devices,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DesiredStateResponse) Reset() {
	*x = DesiredStateResponse{}
	mi := &file_system_model_systemmodel_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DesiredStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DesiredStateResponse) ProtoMessage() {}

func (x *DesiredStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_system_model_systemmodel_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DesiredStateResponse.ProtoReflect.Descriptor instead.
func (*DesiredStateResponse) Descriptor() ([]byte, []int) {
	return file_system_model_systemmodel_proto_rawDescGZIP(), []int{3}
}

func (x *DesiredStateResponse) GetApps() []*AppInstance {
	if x != nil {
		return x.Apps
	}
	return nil
}

func (x *DesiredStateResponse) GetDevices() []*Device {
	if x != nil {
		return x.Devices
	}
	return nil
}

type AppInstanceStatus struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Status          string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	TimeStamp       string                 `protobuf:"bytes,2,opt,name=timeStamp,proto3" json:"timeStamp,omitempty"`
	RunningHost     string                 `protobuf:"bytes,3,opt,name=runningHost,proto3" json:"runningHost,omitempty"`
	InterlinkStatus string                 `protobuf:"bytes,4,opt,name=interlinkStatus,proto3" json:"interlinkStatus,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *AppInstanceStatus) Reset() {
	*x = AppInstanceStatus{}
	mi := &file_system_model_systemmodel_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppInstanceStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppInstanceStatus) ProtoMessage() {}

func (x *AppInstanceStatus) ProtoReflect() protoreflect.Message {
	mi := &file_system_model_systemmodel_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppInstanceStatus.ProtoReflect.Descriptor instead.
func (*AppInstanceStatus) Descriptor() ([]byte, []int) {
	return file_system_model_systemmodel_proto_rawDescGZIP(), []int{4}
}

func (x *AppInstanceStatus) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *AppInstanceStatus) GetTimeStamp() string {
	if x != nil {
		return x.TimeStamp
	}
	return ""
}

func (x *AppInstanceStatus) GetRunningHost() string {
	if x != nil {
		return x.RunningHost
	}
	return ""
}

func (x *AppInstanceStatus) GetInterlinkStatus() string {
	if x != nil {
		return x.InterlinkStatus
	}
	return ""
}

type DeviceStatus struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Status              string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	TimeStamp           string                 `protobuf:"bytes,2,opt,name=timeStamp,proto3" json:"timeStamp,omitempty"`
	RunningAppInstances []string               `protobuf:"bytes,3,rep,name=runningAppInstances,proto3" json:"runningAppInstances,omitempty"`
	InterlinkStatus     string                 `protobuf:"bytes,4,opt,name=interlinkStatus,proto3" json:"interlinkStatus,omitempty"`
	NtpStatus           string                 `protobuf:"bytes,5,opt,name=ntpStatus,proto3" json:"ntpStatus,omitempty"`
	Authenticated       bool                   `protobuf:"varint,6,opt,name=authenticated,proto3" json:"authenticated,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *DeviceStatus) Reset() {
	*x = DeviceStatus{}
	mi := &file_system_model_systemmodel_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeviceStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceStatus) ProtoMessage() {}

func (x *DeviceStatus) ProtoReflect() protoreflect.Message {
	mi := &file_system_model_systemmodel_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceStatus.ProtoReflect.Descriptor instead.
func (*DeviceStatus) Descriptor() ([]byte, []int) {
	return file_system_model_systemmodel_proto_rawDescGZIP(), []int{5}
}

func (x *DeviceStatus) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *DeviceStatus) GetTimeStamp() string {
	if x != nil {
		return x.TimeStamp
	}
	return ""
}

func (x *DeviceStatus) GetRunningAppInstances() []string {
	if x != nil {
		return x.RunningAppInstances
	}
	return nil
}

func (x *DeviceStatus) GetInterlinkStatus() string {
	if x != nil {
		return x.InterlinkStatus
	}
	return ""
}

func (x *DeviceStatus) GetNtpStatus() string {
	if x != nil {
		return x.NtpStatus
	}
	return ""
}

func (x *DeviceStatus) GetAuthenticated() bool {
	if x != nil {
		return x.Authenticated
	}
	return false
}

type Metadata struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Uuid          string                 `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Labels        map[string]string      `protobuf:"bytes,3,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	OwnerId       string                 `protobuf:"bytes,4,opt,name=ownerId,proto3" json:"ownerId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Metadata) Reset() {
	*x = Metadata{}
	mi := &file_system_model_systemmodel_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Metadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metadata) ProtoMessage() {}

func (x *Metadata) ProtoReflect() protoreflect.Message {
	mi := &file_system_model_systemmodel_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metadata.ProtoReflect.Descriptor instead.
func (*Metadata) Descriptor() ([]byte, []int) {
	return file_system_model_systemmodel_proto_rawDescGZIP(), []int{6}
}

func (x *Metadata) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Metadata) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *Metadata) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *Metadata) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

type ContainerNetwork struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ipv6          string                 `protobuf:"bytes,1,opt,name=ipv6,proto3" json:"ipv6,omitempty"`
	Ipv4          string                 `protobuf:"bytes,2,opt,name=ipv4,proto3" json:"ipv4,omitempty"`
	NetworkId     string                 `protobuf:"bytes,3,opt,name=network_id,json=networkId,proto3" json:"network_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ContainerNetwork) Reset() {
	*x = ContainerNetwork{}
	mi := &file_system_model_systemmodel_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContainerNetwork) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerNetwork) ProtoMessage() {}

func (x *ContainerNetwork) ProtoReflect() protoreflect.Message {
	mi := &file_system_model_systemmodel_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerNetwork.ProtoReflect.Descriptor instead.
func (*ContainerNetwork) Descriptor() ([]byte, []int) {
	return file_system_model_systemmodel_proto_rawDescGZIP(), []int{7}
}

func (x *ContainerNetwork) GetIpv6() string {
	if x != nil {
		return x.Ipv6
	}
	return ""
}

func (x *ContainerNetwork) GetIpv4() string {
	if x != nil {
		return x.Ipv4
	}
	return ""
}

func (x *ContainerNetwork) GetNetworkId() string {
	if x != nil {
		return x.NetworkId
	}
	return ""
}

type Limits struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Memory        string                 `protobuf:"bytes,1,opt,name=memory,proto3" json:"memory,omitempty"`
	Cpus          string                 `protobuf:"bytes,2,opt,name=cpus,proto3" json:"cpus,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Limits) Reset() {
	*x = Limits{}
	mi := &file_system_model_systemmodel_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Limits) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Limits) ProtoMessage() {}

func (x *Limits) ProtoReflect() protoreflect.Message {
	mi := &file_system_model_systemmodel_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Limits.ProtoReflect.Descriptor instead.
func (*Limits) Descriptor() ([]byte, []int) {
	return file_system_model_systemmodel_proto_rawDescGZIP(), []int{8}
}

func (x *Limits) GetMemory() string {
	if x != nil {
		return x.Memory
	}
	return ""
}

func (x *Limits) GetCpus() string {
	if x != nil {
		return x.Cpus
	}
	return ""
}

type Resources struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Limits        *Limits                `protobuf:"bytes,1,opt,name=limits,proto3" json:"limits,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Resources) Reset() {
	*x = Resources{}
	mi := &file_system_model_systemmodel_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Resources) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resources) ProtoMessage() {}

func (x *Resources) ProtoReflect() protoreflect.Message {
	mi := &file_system_model_systemmodel_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resources.ProtoReflect.Descriptor instead.
func (*Resources) Descriptor() ([]byte, []int) {
	return file_system_model_systemmodel_proto_rawDescGZIP(), []int{9}
}

func (x *Resources) GetLimits() *Limits {
	if x != nil {
		return x.Limits
	}
	return nil
}

type Container struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Image         string                 `protobuf:"bytes,2,opt,name=image,proto3" json:"image,omitempty"`
	Networks      []*ContainerNetwork    `protobuf:"bytes,3,rep,name=networks,proto3" json:"networks,omitempty"`
	Resources     *Resources             `protobuf:"bytes,4,opt,name=resources,proto3" json:"resources,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Container) Reset() {
	*x = Container{}
	mi := &file_system_model_systemmodel_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Container) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Container) ProtoMessage() {}

func (x *Container) ProtoReflect() protoreflect.Message {
	mi := &file_system_model_systemmodel_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Container.ProtoReflect.Descriptor instead.
func (*Container) Descriptor() ([]byte, []int) {
	return file_system_model_systemmodel_proto_rawDescGZIP(), []int{10}
}

func (x *Container) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Container) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *Container) GetNetworks() []*ContainerNetwork {
	if x != nil {
		return x.Networks
	}
	return nil
}

func (x *Container) GetResources() *Resources {
	if x != nil {
		return x.Resources
	}
	return nil
}

type Affinity struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	PreferredHosts  []string               `protobuf:"bytes,1,rep,name=preferredHosts,proto3" json:"preferredHosts,omitempty"`
	AppAntiAffinity []string               `protobuf:"bytes,2,rep,name=appAntiAffinity,proto3" json:"appAntiAffinity,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Affinity) Reset() {
	*x = Affinity{}
	mi := &file_system_model_systemmodel_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Affinity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Affinity) ProtoMessage() {}

func (x *Affinity) ProtoReflect() protoreflect.Message {
	mi := &file_system_model_systemmodel_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Affinity.ProtoReflect.Descriptor instead.
func (*Affinity) Descriptor() ([]byte, []int) {
	return file_system_model_systemmodel_proto_rawDescGZIP(), []int{11}
}

func (x *Affinity) GetPreferredHosts() []string {
	if x != nil {
		return x.PreferredHosts
	}
	return nil
}

func (x *Affinity) GetAppAntiAffinity() []string {
	if x != nil {
		return x.AppAntiAffinity
	}
	return nil
}

type AppInstanceSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Data:
	//
	//	*AppInstanceSpec_Container
	//	*AppInstanceSpec_Blob
	Data          isAppInstanceSpec_Data `protobuf_oneof:"data"`
	Affinity      *Affinity              `protobuf:"bytes,3,opt,name=affinity,proto3" json:"affinity,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AppInstanceSpec) Reset() {
	*x = AppInstanceSpec{}
	mi := &file_system_model_systemmodel_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppInstanceSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppInstanceSpec) ProtoMessage() {}

func (x *AppInstanceSpec) ProtoReflect() protoreflect.Message {
	mi := &file_system_model_systemmodel_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppInstanceSpec.ProtoReflect.Descriptor instead.
func (*AppInstanceSpec) Descriptor() ([]byte, []int) {
	return file_system_model_systemmodel_proto_rawDescGZIP(), []int{12}
}

func (x *AppInstanceSpec) GetData() isAppInstanceSpec_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *AppInstanceSpec) GetContainer() *Container {
	if x != nil {
		if x, ok := x.Data.(*AppInstanceSpec_Container); ok {
			return x.Container
		}
	}
	return nil
}

func (x *AppInstanceSpec) GetBlob() []byte {
	if x != nil {
		if x, ok := x.Data.(*AppInstanceSpec_Blob); ok {
			return x.Blob
		}
	}
	return nil
}

func (x *AppInstanceSpec) GetAffinity() *Affinity {
	if x != nil {
		return x.Affinity
	}
	return nil
}

type isAppInstanceSpec_Data interface {
	isAppInstanceSpec_Data()
}

type AppInstanceSpec_Container struct {
	Container *Container `protobuf:"bytes,1,opt,name=container,proto3,oneof"`
}

type AppInstanceSpec_Blob struct {
	Blob []byte `protobuf:"bytes,2,opt,name=blob,proto3,oneof"`
}

func (*AppInstanceSpec_Container) isAppInstanceSpec_Data() {}

func (*AppInstanceSpec_Blob) isAppInstanceSpec_Data() {}

type AppInstance struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Version       string                 `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	Kind          string                 `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind,omitempty"`
	Metadata      *Metadata              `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Spec          *AppInstanceSpec       `protobuf:"bytes,4,opt,name=spec,proto3" json:"spec,omitempty"`
	Status        *AppInstanceStatus     `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	Deleted       bool                   `protobuf:"varint,6,opt,name=deleted,proto3" json:"deleted,omitempty"`
	Paused        bool                   `protobuf:"varint,7,opt,name=paused,proto3" json:"paused,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AppInstance) Reset() {
	*x = AppInstance{}
	mi := &file_system_model_systemmodel_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppInstance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppInstance) ProtoMessage() {}

func (x *AppInstance) ProtoReflect() protoreflect.Message {
	mi := &file_system_model_systemmodel_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppInstance.ProtoReflect.Descriptor instead.
func (*AppInstance) Descriptor() ([]byte, []int) {
	return file_system_model_systemmodel_proto_rawDescGZIP(), []int{13}
}

func (x *AppInstance) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *AppInstance) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *AppInstance) GetMetadata() *Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *AppInstance) GetSpec() *AppInstanceSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *AppInstance) GetStatus() *AppInstanceStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *AppInstance) GetDeleted() bool {
	if x != nil {
		return x.Deleted
	}
	return false
}

func (x *AppInstance) GetPaused() bool {
	if x != nil {
		return x.Paused
	}
	return false
}

type DeviceContainerNetwork struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NetworkId     string                 `protobuf:"bytes,1,opt,name=networkId,proto3" json:"networkId,omitempty"`
	Subnet        string                 `protobuf:"bytes,2,opt,name=subnet,proto3" json:"subnet,omitempty"`
	Gateway       string                 `protobuf:"bytes,3,opt,name=gateway,proto3" json:"gateway,omitempty"`
	NicName       string                 `protobuf:"bytes,4,opt,name=nicName,proto3" json:"nicName,omitempty"`
	Type          string                 `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeviceContainerNetwork) Reset() {
	*x = DeviceContainerNetwork{}
	mi := &file_system_model_systemmodel_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeviceContainerNetwork) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceContainerNetwork) ProtoMessage() {}

func (x *DeviceContainerNetwork) ProtoReflect() protoreflect.Message {
	mi := &file_system_model_systemmodel_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceContainerNetwork.ProtoReflect.Descriptor instead.
func (*DeviceContainerNetwork) Descriptor() ([]byte, []int) {
	return file_system_model_systemmodel_proto_rawDescGZIP(), []int{14}
}

func (x *DeviceContainerNetwork) GetNetworkId() string {
	if x != nil {
		return x.NetworkId
	}
	return ""
}

func (x *DeviceContainerNetwork) GetSubnet() string {
	if x != nil {
		return x.Subnet
	}
	return ""
}

func (x *DeviceContainerNetwork) GetGateway() string {
	if x != nil {
		return x.Gateway
	}
	return ""
}

func (x *DeviceContainerNetwork) GetNicName() string {
	if x != nil {
		return x.NicName
	}
	return ""
}

func (x *DeviceContainerNetwork) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type DeviceNetwork struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	NetName        string                 `protobuf:"bytes,1,opt,name=netName,proto3" json:"netName,omitempty"`
	NicName        string                 `protobuf:"bytes,2,opt,name=nicName,proto3" json:"nicName,omitempty"`
	RedundancyMode string                 `protobuf:"bytes,3,opt,name=redundancyMode,proto3" json:"redundancyMode,omitempty"`
	NicList        []string               `protobuf:"bytes,4,rep,name=nicList,proto3" json:"nicList,omitempty"`
	Ipv4           string                 `protobuf:"bytes,5,opt,name=ipv4,proto3" json:"ipv4,omitempty"`
	Gateway        string                 `protobuf:"bytes,6,opt,name=gateway,proto3" json:"gateway,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *DeviceNetwork) Reset() {
	*x = DeviceNetwork{}
	mi := &file_system_model_systemmodel_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeviceNetwork) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceNetwork) ProtoMessage() {}

func (x *DeviceNetwork) ProtoReflect() protoreflect.Message {
	mi := &file_system_model_systemmodel_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceNetwork.ProtoReflect.Descriptor instead.
func (*DeviceNetwork) Descriptor() ([]byte, []int) {
	return file_system_model_systemmodel_proto_rawDescGZIP(), []int{15}
}

func (x *DeviceNetwork) GetNetName() string {
	if x != nil {
		return x.NetName
	}
	return ""
}

func (x *DeviceNetwork) GetNicName() string {
	if x != nil {
		return x.NicName
	}
	return ""
}

func (x *DeviceNetwork) GetRedundancyMode() string {
	if x != nil {
		return x.RedundancyMode
	}
	return ""
}

func (x *DeviceNetwork) GetNicList() []string {
	if x != nil {
		return x.NicList
	}
	return nil
}

func (x *DeviceNetwork) GetIpv4() string {
	if x != nil {
		return x.Ipv4
	}
	return ""
}

func (x *DeviceNetwork) GetGateway() string {
	if x != nil {
		return x.Gateway
	}
	return ""
}

type DeviceSpec struct {
	state                  protoimpl.MessageState    `protogen:"open.v1"`
	Addresses              []string                  `protobuf:"bytes,1,rep,name=addresses,proto3" json:"addresses,omitempty"`
	Networks               []*DeviceNetwork          `protobuf:"bytes,2,rep,name=networks,proto3" json:"networks,omitempty"`
	ContainerNetworks      []*DeviceContainerNetwork `protobuf:"bytes,3,rep,name=containerNetworks,proto3" json:"containerNetworks,omitempty"`
	ReservedAppInterlinkIp string                    `protobuf:"bytes,4,opt,name=reservedAppInterlinkIp,proto3" json:"reservedAppInterlinkIp,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *DeviceSpec) Reset() {
	*x = DeviceSpec{}
	mi := &file_system_model_systemmodel_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeviceSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceSpec) ProtoMessage() {}

func (x *DeviceSpec) ProtoReflect() protoreflect.Message {
	mi := &file_system_model_systemmodel_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceSpec.ProtoReflect.Descriptor instead.
func (*DeviceSpec) Descriptor() ([]byte, []int) {
	return file_system_model_systemmodel_proto_rawDescGZIP(), []int{16}
}

func (x *DeviceSpec) GetAddresses() []string {
	if x != nil {
		return x.Addresses
	}
	return nil
}

func (x *DeviceSpec) GetNetworks() []*DeviceNetwork {
	if x != nil {
		return x.Networks
	}
	return nil
}

func (x *DeviceSpec) GetContainerNetworks() []*DeviceContainerNetwork {
	if x != nil {
		return x.ContainerNetworks
	}
	return nil
}

func (x *DeviceSpec) GetReservedAppInterlinkIp() string {
	if x != nil {
		return x.ReservedAppInterlinkIp
	}
	return ""
}

type TimeSetting struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TimeSetting) Reset() {
	*x = TimeSetting{}
	mi := &file_system_model_systemmodel_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TimeSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeSetting) ProtoMessage() {}

func (x *TimeSetting) ProtoReflect() protoreflect.Message {
	mi := &file_system_model_systemmodel_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeSetting.ProtoReflect.Descriptor instead.
func (*TimeSetting) Descriptor() ([]byte, []int) {
	return file_system_model_systemmodel_proto_rawDescGZIP(), []int{17}
}

type Device struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Kind          string                 `protobuf:"bytes,1,opt,name=kind,proto3" json:"kind,omitempty"`
	Metadata      *Metadata              `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Spec          *DeviceSpec            `protobuf:"bytes,3,opt,name=spec,proto3" json:"spec,omitempty"`
	TimeSetting   *TimeSetting           `protobuf:"bytes,4,opt,name=timeSetting,proto3" json:"timeSetting,omitempty"`
	Status        *DeviceStatus          `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	Deleted       bool                   `protobuf:"varint,6,opt,name=deleted,proto3" json:"deleted,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Device) Reset() {
	*x = Device{}
	mi := &file_system_model_systemmodel_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Device) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Device) ProtoMessage() {}

func (x *Device) ProtoReflect() protoreflect.Message {
	mi := &file_system_model_systemmodel_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Device.ProtoReflect.Descriptor instead.
func (*Device) Descriptor() ([]byte, []int) {
	return file_system_model_systemmodel_proto_rawDescGZIP(), []int{18}
}

func (x *Device) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *Device) GetMetadata() *Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Device) GetSpec() *DeviceSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *Device) GetTimeSetting() *TimeSetting {
	if x != nil {
		return x.TimeSetting
	}
	return nil
}

func (x *Device) GetStatus() *DeviceStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *Device) GetDeleted() bool {
	if x != nil {
		return x.Deleted
	}
	return false
}

var File_system_model_systemmodel_proto protoreflect.FileDescriptor

var file_system_model_systemmodel_proto_rawDesc = string([]byte{
	0x0a, 0x1e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x13, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x15, 0x0a, 0x13, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x13, 0x0a, 0x11,
	0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x10, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x83, 0x01, 0x0a, 0x14, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x04,
	0x61, 0x70, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x2e, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x04, 0x61, 0x70,
	0x70, 0x73, 0x12, 0x35, 0x0a, 0x07, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x52, 0x07, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x22, 0x95, 0x01, 0x0a, 0x11, 0x41, 0x70,
	0x70, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x53,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x53, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67,
	0x48, 0x6f, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x75, 0x6e, 0x6e,
	0x69, 0x6e, 0x67, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x6c, 0x69, 0x6e, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6c, 0x69, 0x6e, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x22, 0xe4, 0x01, 0x0a, 0x0c, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x30, 0x0a, 0x13, 0x72, 0x75, 0x6e, 0x6e,
	0x69, 0x6e, 0x67, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x13, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x41, 0x70,
	0x70, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x6c, 0x69, 0x6e, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6c, 0x69, 0x6e, 0x6b, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x74, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x74, 0x70, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61,
	0x74, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x61, 0x75, 0x74, 0x68, 0x65,
	0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x22, 0xca, 0x01, 0x0a, 0x08, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x41, 0x0a,
	0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x59, 0x0a, 0x10, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x70, 0x76,
	0x36, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x70, 0x76, 0x36, 0x12, 0x12, 0x0a,
	0x04, 0x69, 0x70, 0x76, 0x34, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x70, 0x76,
	0x34, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x64,
	0x22, 0x34, 0x0a, 0x06, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65,
	0x6d, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x6f,
	0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x70, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x63, 0x70, 0x75, 0x73, 0x22, 0x40, 0x0a, 0x09, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x12, 0x33, 0x0a, 0x06, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x73,
	0x52, 0x06, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x22, 0xb6, 0x01, 0x0a, 0x09, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x12, 0x41, 0x0a, 0x08, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x08, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x73, 0x12, 0x3c, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x22, 0x5c, 0x0a, 0x08, 0x41, 0x66, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x12, 0x26, 0x0a,
	0x0e, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x48, 0x6f, 0x73, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64,
	0x48, 0x6f, 0x73, 0x74, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x61, 0x70, 0x70, 0x41, 0x6e, 0x74, 0x69,
	0x41, 0x66, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f,
	0x61, 0x70, 0x70, 0x41, 0x6e, 0x74, 0x69, 0x41, 0x66, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x22,
	0xaa, 0x01, 0x0a, 0x0f, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53,
	0x70, 0x65, 0x63, 0x12, 0x3e, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x48, 0x00, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x04, 0x62, 0x6c, 0x6f, 0x62, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x48, 0x00, 0x52, 0x04, 0x62, 0x6c, 0x6f, 0x62, 0x12, 0x39, 0x0a, 0x08, 0x61, 0x66, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x2e, 0x41, 0x66, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x52, 0x08, 0x61, 0x66, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x79, 0x42, 0x06, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xa2, 0x02, 0x0a,
	0x0b, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x39, 0x0a, 0x08, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x38, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x70, 0x65, 0x63, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x12,
	0x3e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x26, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x75,
	0x73, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x70, 0x61, 0x75, 0x73, 0x65,
	0x64, 0x22, 0x96, 0x01, 0x0a, 0x16, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x1c, 0x0a, 0x09,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x75,
	0x62, 0x6e, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x75, 0x62, 0x6e,
	0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x12, 0x18, 0x0a, 0x07,
	0x6e, 0x69, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e,
	0x69, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0xb3, 0x01, 0x0a, 0x0d, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x18, 0x0a, 0x07,
	0x6e, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e,
	0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x69, 0x63, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x69, 0x63, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x26, 0x0a, 0x0e, 0x72, 0x65, 0x64, 0x75, 0x6e, 0x64, 0x61, 0x6e, 0x63, 0x79, 0x4d, 0x6f,
	0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x64, 0x75, 0x6e, 0x64,
	0x61, 0x6e, 0x63, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x69, 0x63, 0x4c,
	0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x69, 0x63, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x70, 0x76, 0x34, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x69, 0x70, 0x76, 0x34, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x22, 0xfd, 0x01, 0x0a, 0x0a, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x70, 0x65, 0x63, 0x12,
	0x1c, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x3e, 0x0a,
	0x08, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x52, 0x08, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x12, 0x59, 0x0a,
	0x11, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x4e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x11, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72,
	0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x12, 0x36, 0x0a, 0x16, 0x72, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x64, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6c, 0x69, 0x6e, 0x6b,
	0x49, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x64, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6c, 0x69, 0x6e, 0x6b, 0x49, 0x70,
	0x22, 0x0d, 0x0a, 0x0b, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x22,
	0xa5, 0x02, 0x0a, 0x06, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x69,
	0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x39,
	0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52,
	0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x33, 0x0a, 0x04, 0x73, 0x70, 0x65,
	0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x53, 0x70, 0x65, 0x63, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x12, 0x42,
	0x0a, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x12, 0x39, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x2a, 0x66, 0x0a, 0x15, 0x41, 0x70, 0x70, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x45, 0x6e, 0x75, 0x6d,
	0x12, 0x0b, 0x0a, 0x07, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x0a, 0x0a,
	0x06, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x72, 0x69,
	0x6d, 0x61, 0x72, 0x79, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64,
	0x61, 0x72, 0x79, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x50, 0x61, 0x69, 0x72, 0x65, 0x64, 0x10,
	0x04, 0x12, 0x0c, 0x0a, 0x08, 0x55, 0x6e, 0x70, 0x61, 0x69, 0x72, 0x65, 0x64, 0x10, 0x05, 0x2a,
	0x32, 0x0a, 0x10, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x45,
	0x6e, 0x75, 0x6d, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x63, 0x68, 0x61, 0x62,
	0x6c, 0x65, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x52, 0x65, 0x61, 0x63, 0x68, 0x61, 0x62, 0x6c,
	0x65, 0x10, 0x01, 0x32, 0xca, 0x03, 0x0a, 0x0b, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x12, 0x54, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x12, 0x26, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x30, 0x01, 0x12, 0x5b, 0x0a, 0x10, 0x4c, 0x69, 0x73,
	0x74, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x23, 0x2e,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x20, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x30, 0x01, 0x12, 0x66, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x44, 0x65, 0x73,
	0x69, 0x72, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x28, 0x2e, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e,
	0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65,
	0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54,
	0x0a, 0x12, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x42, 0x79, 0x49, 0x64, 0x12, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x1a, 0x20, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x12, 0x4a, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x42, 0x79, 0x49, 0x64, 0x12, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x1a, 0x1b, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x42, 0x94, 0x02, 0x0a, 0x17, 0x63, 0x6f, 0x6d, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x42, 0x10, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01,
	0x5a, 0x7b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69, 0x6e, 0x74,
	0x65, 0x6c, 0x2d, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x2f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x77,
	0x6f, 0x72, 0x6b, 0x73, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x2e, 0x6f, 0x72, 0x63, 0x68, 0x65, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x67, 0x6f, 0x6c, 0x64, 0x2d, 0x63, 0x72, 0x65,
	0x65, 0x6b, 0x2e, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2d, 0x65, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2d, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2d, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0xa2, 0x02, 0x03,
	0x53, 0x58, 0x58, 0xaa, 0x02, 0x13, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0xca, 0x02, 0x13, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0xe2,
	0x02, 0x1f, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0xea, 0x02, 0x13, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_system_model_systemmodel_proto_rawDescOnce sync.Once
	file_system_model_systemmodel_proto_rawDescData []byte
)

func file_system_model_systemmodel_proto_rawDescGZIP() []byte {
	file_system_model_systemmodel_proto_rawDescOnce.Do(func() {
		file_system_model_systemmodel_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_system_model_systemmodel_proto_rawDesc), len(file_system_model_systemmodel_proto_rawDesc)))
	})
	return file_system_model_systemmodel_proto_rawDescData
}

var file_system_model_systemmodel_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_system_model_systemmodel_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_system_model_systemmodel_proto_goTypes = []any{
	(AppInstanceStatusEnum)(0),     // 0: SystemModelProvider.AppInstanceStatusEnum
	(DeviceStatusEnum)(0),          // 1: SystemModelProvider.DeviceStatusEnum
	(*DesiredStateRequest)(nil),    // 2: SystemModelProvider.DesiredStateRequest
	(*ListDeviceRequest)(nil),      // 3: SystemModelProvider.ListDeviceRequest
	(*ListAppRequest)(nil),         // 4: SystemModelProvider.ListAppRequest
	(*DesiredStateResponse)(nil),   // 5: SystemModelProvider.DesiredStateResponse
	(*AppInstanceStatus)(nil),      // 6: SystemModelProvider.AppInstanceStatus
	(*DeviceStatus)(nil),           // 7: SystemModelProvider.DeviceStatus
	(*Metadata)(nil),               // 8: SystemModelProvider.Metadata
	(*ContainerNetwork)(nil),       // 9: SystemModelProvider.ContainerNetwork
	(*Limits)(nil),                 // 10: SystemModelProvider.Limits
	(*Resources)(nil),              // 11: SystemModelProvider.Resources
	(*Container)(nil),              // 12: SystemModelProvider.Container
	(*Affinity)(nil),               // 13: SystemModelProvider.Affinity
	(*AppInstanceSpec)(nil),        // 14: SystemModelProvider.AppInstanceSpec
	(*AppInstance)(nil),            // 15: SystemModelProvider.AppInstance
	(*DeviceContainerNetwork)(nil), // 16: SystemModelProvider.DeviceContainerNetwork
	(*DeviceNetwork)(nil),          // 17: SystemModelProvider.DeviceNetwork
	(*DeviceSpec)(nil),             // 18: SystemModelProvider.DeviceSpec
	(*TimeSetting)(nil),            // 19: SystemModelProvider.TimeSetting
	(*Device)(nil),                 // 20: SystemModelProvider.Device
	nil,                            // 21: SystemModelProvider.Metadata.LabelsEntry
	(*wrapperspb.StringValue)(nil), // 22: google.protobuf.StringValue
}
var file_system_model_systemmodel_proto_depIdxs = []int32{
	15, // 0: SystemModelProvider.DesiredStateResponse.apps:type_name -> SystemModelProvider.AppInstance
	20, // 1: SystemModelProvider.DesiredStateResponse.devices:type_name -> SystemModelProvider.Device
	21, // 2: SystemModelProvider.Metadata.labels:type_name -> SystemModelProvider.Metadata.LabelsEntry
	10, // 3: SystemModelProvider.Resources.limits:type_name -> SystemModelProvider.Limits
	9,  // 4: SystemModelProvider.Container.networks:type_name -> SystemModelProvider.ContainerNetwork
	11, // 5: SystemModelProvider.Container.resources:type_name -> SystemModelProvider.Resources
	12, // 6: SystemModelProvider.AppInstanceSpec.container:type_name -> SystemModelProvider.Container
	13, // 7: SystemModelProvider.AppInstanceSpec.affinity:type_name -> SystemModelProvider.Affinity
	8,  // 8: SystemModelProvider.AppInstance.metadata:type_name -> SystemModelProvider.Metadata
	14, // 9: SystemModelProvider.AppInstance.spec:type_name -> SystemModelProvider.AppInstanceSpec
	6,  // 10: SystemModelProvider.AppInstance.status:type_name -> SystemModelProvider.AppInstanceStatus
	17, // 11: SystemModelProvider.DeviceSpec.networks:type_name -> SystemModelProvider.DeviceNetwork
	16, // 12: SystemModelProvider.DeviceSpec.containerNetworks:type_name -> SystemModelProvider.DeviceContainerNetwork
	8,  // 13: SystemModelProvider.Device.metadata:type_name -> SystemModelProvider.Metadata
	18, // 14: SystemModelProvider.Device.spec:type_name -> SystemModelProvider.DeviceSpec
	19, // 15: SystemModelProvider.Device.timeSetting:type_name -> SystemModelProvider.TimeSetting
	7,  // 16: SystemModelProvider.Device.status:type_name -> SystemModelProvider.DeviceStatus
	3,  // 17: SystemModelProvider.SystemModel.ListDevices:input_type -> SystemModelProvider.ListDeviceRequest
	4,  // 18: SystemModelProvider.SystemModel.ListAppInstances:input_type -> SystemModelProvider.ListAppRequest
	2,  // 19: SystemModelProvider.SystemModel.GetDesiredState:input_type -> SystemModelProvider.DesiredStateRequest
	22, // 20: SystemModelProvider.SystemModel.GetAppInstanceById:input_type -> google.protobuf.StringValue
	22, // 21: SystemModelProvider.SystemModel.GetDeviceById:input_type -> google.protobuf.StringValue
	20, // 22: SystemModelProvider.SystemModel.ListDevices:output_type -> SystemModelProvider.Device
	15, // 23: SystemModelProvider.SystemModel.ListAppInstances:output_type -> SystemModelProvider.AppInstance
	5,  // 24: SystemModelProvider.SystemModel.GetDesiredState:output_type -> SystemModelProvider.DesiredStateResponse
	15, // 25: SystemModelProvider.SystemModel.GetAppInstanceById:output_type -> SystemModelProvider.AppInstance
	20, // 26: SystemModelProvider.SystemModel.GetDeviceById:output_type -> SystemModelProvider.Device
	22, // [22:27] is the sub-list for method output_type
	17, // [17:22] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_system_model_systemmodel_proto_init() }
func file_system_model_systemmodel_proto_init() {
	if File_system_model_systemmodel_proto != nil {
		return
	}
	file_system_model_systemmodel_proto_msgTypes[12].OneofWrappers = []any{
		(*AppInstanceSpec_Container)(nil),
		(*AppInstanceSpec_Blob)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_system_model_systemmodel_proto_rawDesc), len(file_system_model_systemmodel_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_system_model_systemmodel_proto_goTypes,
		DependencyIndexes: file_system_model_systemmodel_proto_depIdxs,
		EnumInfos:         file_system_model_systemmodel_proto_enumTypes,
		MessageInfos:      file_system_model_systemmodel_proto_msgTypes,
	}.Build()
	File_system_model_systemmodel_proto = out.File
	file_system_model_systemmodel_proto_goTypes = nil
	file_system_model_systemmodel_proto_depIdxs = nil
}
